# DO NOT MODIFY THIS FILE.
# If you wish to customise the configuration of this plugin, simply put a copy
# of any variable you wish to modify into the etc/cowrie.cfg file under the
# [output_abuseipdb] section and modify it there. Any variables found under
# this plugin's section in cowrie.cfg will override its respective default
# value here.

[abuseipdb_defaults]
###############################################################################
# LOGGING & REPORTING
###############################################################################

# Enable verbose logging
verbose_logging = false

# Sets the threshold at which an IP address is reported. If an IP address is
# seen making a certain number of login ATTEMPS within a sliding WINDOW
# (in minutes) of time, we'll report it.
tollerance_window = 30
tollerance_attempts = 10

# The value set here is the number of hours to wait until re-reporting an IP
# address.
rereport_after = 24

###############################################################################
# ABUSEIPDB API SETTINGS
###############################################################################

api_key = ***
report_url = https://api.abuseipdb.com/api/v2/report
bulk_report_url = https://api.abuseipdb.com/api/v2/bulk-report

# The time at which the daily API usage quota is reset. At the time of writing,
# this is at 00:00:00-0500.
quota_reset_hour = 00:00
quota_utc_offset = -5
# Plugin's daily API usage allowance. After exceeding 
singleip_daily_quota = 500
bulk_daily_quota = 2

###############################################################################
# HTTP CLIENT SETTINGS
###############################################################################

http_client_ua = AbuseIPDB Cowrie Plugin/0.1 (+https://github.com/bn-s/abuseipdb-cowrie-plugin), Cowrie SSH-Telnet Honeypot/2.0 (+https://cowrie.org)

# **** IMPORTANT **** 
# HTTP requests will be called in threads! If a reasonable timeout is not set
# they have the potential to persist for a very long time. Please take note of
# the retry strategy below if increasing this number.
http_request_timeout = 10

# Retry Strategy: 
# Retry the request when the following status codes are in the
# response. This plugin will automatically filter out any values provided here
# that are not 500 (server error) series codes.
retry_status_codes = 500, 502, 503, 504

# **** IMPORTANT ****
# Like the timeout value, setting the backoff factor and/or retry attempts too
# high may result in threads hanging around for a very long time. After the
# second retry attempt, urllib will increase the amount of time it waits
# between retry attempts. Where n is the number of the retry attempt, urllib
# will wait for:
#     backoff_factor*(2^(n-1))
# seconds before making the retry attempt. It will continue increasing up to a
# maximum of 120 seconds per attempt.
retry_no_attempts = 3
retry_backoff_factor = 30
